# Файл: docker-compose.prod.yaml
version: '3.8'

services:
  app:
    image: ${DOCKER_USERNAME}/digital-market:latest
    container_name: digital-market-app
    restart: always
    ports:
      - "80:8080"
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=0
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=24h
      - GIN_MODE=release
    networks:
      - digital-market-network

  postgres:
    image: postgres:14-alpine
    container_name: digital-market-postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - digital-market-network

  redis:
    image: redis:7-alpine
    container_name: digital-market-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - digital-market-network

  migrations:
    image: migrate/migrate
    container_name: digital-market-migrations
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable", "up"]
    depends_on:
      - postgres
    networks:
      - digital-market-network

volumes:
  postgres-data:
  redis-data:

networks:
  digital-market-network:
    driver: bridge
